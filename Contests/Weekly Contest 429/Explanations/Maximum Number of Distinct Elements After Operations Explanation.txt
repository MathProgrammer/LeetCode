Let us insert elements into a set in descending order. 

For each element, let us greedily insert the smallest possible value
in order to make a distinct element. 

The smallest possible value we can insert is A[i] - k 

However, we have maintained the invariant that each element
has been inserted at the smallest possible value. 

This means we do not have to check if the set contains every element in [A[i] - k, A[i] + k] 

-----

class Solution {
public:
    int maxDistinctElements(vector<int>& nums, int k) 
    {
        sort(nums.begin(), nums.end());
        set <int> distinct; 
        for(int i = 0; i < nums.size(); i++)
        {
            int next = nums[i] - k;
            if(distinct.size() > 0)
            {
                next = max(next, *(distinct.rbegin()) + 1);
            }

            next = min(next, nums[i] + k);
            distinct.insert(next);
        }

        return distinct.size();
    }
};